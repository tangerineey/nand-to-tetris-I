// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.

    // Select a register group (RAM 64) based on most significant three bits
    DMux8Way(in=load, sel=address[6..8], a=rg0, b=rg1, c=rg2, d=rg3, e=rg4, f=rg5, g=rg6, h=rg7);

    // Now based on the group, load the value in
    RAM64(in=in, load=rg0, address=address[0..5], out= r0);
    RAM64(in=in, load=rg1, address=address[0..5], out= r1);
    RAM64(in=in, load=rg2, address=address[0..5], out= r2);
    RAM64(in=in, load=rg3, address=address[0..5], out= r3);
    RAM64(in=in, load=rg4, address=address[0..5], out= r4);
    RAM64(in=in, load=rg5, address=address[0..5], out= r5);
    RAM64(in=in, load=rg6, address=address[0..5], out= r6);
    RAM64(in=in, load=rg7, address=address[0..5], out= r7);

    // Send only the chosen register's value to output
    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[6..8], out=out);
}